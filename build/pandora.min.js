require.define("/pandora.js",function(a,b,c,d,e){function k(a){return s.make(a)}function l(){var a=i(arguments),b=[],c={},d=a.reduce(function(a,d){return n(d,a,c),b.push.apply(b,d._required),a},{});return m(d,b)?d:w(t(b))}function m(a,b){return b.every(function(b){return b in a})}function n(a,b,c){function e(b){if(a._overrides[b]&&c[b])throw v(b);return a._overrides[b]}var d=a._value;return h(d).forEach(function(f){f in b?e(f)?b[f]=d[f]:c[f]?null:w(u(f)):b[f]=d[f],c[f]=c[f]||a._overrides[f]}),b}function o(a){return a}function p(a){return typeof a=="function"}function q(a,b,c){return c=c||o,b.reduce(function(b,d){return b[c(d)]=a[d],b},{})}function r(a,b){return q(a,h(a),b)}function t(a){var b="The following module's requirements haven't been met:\n  - "+a.join("\n  - "),c=Error.call(f(Error.prototype),b);return c.name="PandoraNotSatisfiedE",c}function u(a){var b=Error.call(f(Error.prototype),'The key "'+a+'" already exists in the target module.');return b.name="PandoraCollisionE",b}function v(a){var b=Error.call(f(Error.prototype),'The key "'+a+'" is already overriden by another module.');return b.name="PandoraOverrideCollisionE",b}function w(a){throw a}var f=Object.create,g=Object.getPrototypeOf,h=Object.keys,i=[].slice.call.bind([].slice),j=r,s={make:function(b,c,d){var e=f(this);return e._value=j(b||{}),e._required=i(c||this._required||[]),e._overrides=j(d||this._overrides||{}),e},value:function(){return l(this)},only:function(){return this.make(q(this._value,i(arguments)))},hide:function(){var b=i(arguments),c=h(this._value).filter(function(a){return!~b.indexOf(a)});return this.make(q(this._value,c))},prefix:function(b){return this.make(r(this._value,function(a){return b+a}))},alias:function(b){var c=p(b)?b:function(a){return a in b?b[a]:a};return this.make(r(this._value,c))},map:function(b){var c=this._value;return this.make(h(c).reduce(function(a,d){return a[d]=b(c[d],d,c),a},{}))},need:function(){return this.make(this._value,this._required.concat(i(arguments)))},override:function(){var b=j(this._overrides);return i(arguments).forEach(function(a){b[a]=!0}),this.make(this._value,this._required,b)}};b.exports={pandora:k,merge:l,Pandora:s,internal:{identity:o,callable_p:p,satisfied_p:m,from_properties:q,from_mappings:r,copy_keys:n,raise:w,PandoraNotSatisfiedE:t,PandoraCollisionE:u,PandoraOverrideCollisionE:v}}}),require("/pandora.js");